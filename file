
/*
 ============================================================================
 Name        : calcul.c
 Author      : me
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */
//order is important in functions

#include <stdio.h>
#include <stdlib.h>

typedef union vault {
   int i;
   float f;
   char c;
}medic;





void vector_muinus(float *v1,float *v2,int *ret)
{
   int m;
   float res;
   puts("your vector is");
   for (m = 0;m<*ret;m++)
   {
       res= v1[m]- v2[m];
       printf ("%f\t%f\t%f\n",res,v1[m],v2[m]);
   }
}

void vectorPlus (float *v1,float *v2,int *ret)
{
    int m;
    float res;
    puts("your vector is");
    for (m = 0;m<*ret;m++)
    {
        res= v1[m] + v2[m];
        printf ("%f\t%f\t%f\n",res,v1[m],v2[m]);
    }
}


void vector_scal(float *v1,float *v2,int *ret)
{
    int m;
    float res;
    puts("your vector is");
    for (m = 0;m<*ret;m++)
    {
        res = v1[m]* v2[m];
        printf ("%f\t%f\t%f\n",res,v1[m],v2[m]);
    }
}









/*float vector_pl_print()///errors in vec are just to diff
{
    FILE *inFile;
    inFile = fopen("source.txt","r");
    char a,b;
    int ret,i,c;
    float *vector1;
    float *vector2;
    fscanf (inFile, "%c %c %d",&a,&b,&ret);
    printf("%d\t",ret);
    puts("we are here");
    vector1 = malloc(ret*sizeof(float));
    puts("we are here7");
    vector2 = malloc(ret*sizeof(float));
    puts("we are here7");
    for (i = 0;i<ret;i++) {fscanf (inFile, "f",&vector2[i]);printf("%f\t",vector2[i]);}
    printf("enter second vector ");
    for (c = 0;c<ret;c++) {scanf ("%f",&vector2[c]);}
    switch(a)
        {
            case '+': vectorPlus(vector1,vector2,&ret);break;
            case '-': vector_muinus(vector1,vector2,&ret);break;
            case '*': vector_scal(vector1,vector2,&ret);break;
        }
    return 0 ;
}
*/
int main()
{
    FILE *inFile, *outFile;
    float *a ;
    float *b ;
    char ch ='p';
    char vec ='v';
    int nubmerOfVec;
    inFile = fopen("source.txt","r");
    outFile = fopen("output.txt","w");
    fscanf (inFile, "%c %c ", &ch,&vec);
    switch(vec)
    {
     case 'v':fscanf (inFile, "%d", &nubmerOfVec);break;
     case 'c': nubmerOfVec = 1;
    }

    printf("we are here 1 %d", nubmerOfVec);
    a = malloc(nubmerOfVec*sizeof(float));
    b = malloc(nubmerOfVec*sizeof(float));
    for(int q=0;q<nubmerOfVec;q++)
    {
            fscanf (inFile, " %f",&a[q]);
            printf("\tFirst%f",a[q]);
    }
    for(int q=0;q<nubmerOfVec;q++)
        {
                fscanf (inFile, " %f",&b[q]);
                printf("\tSecond%f",b[q]);
        }
    puts("we are here 2 ");
           switch(vec)
           {
            case 'c' :
                switch(ch)
                {
                case '+' :puts("we are here ");*a = *a + *b;fprintf ( outFile,"this is a result %f\n", *a); ; break;
                case '-' :*a = *a - *b;fprintf ( outFile,"this is a result %f\n", *a); ; break;

                case 'f' :*b =1 ;for (int c = 1;c<=*a;c++)
    {
        *b=*b*c;
    }fprintf ( outFile,"this is a result %f\n", *b); break;
                case '*' :;*a = *a * (*b);fprintf ( outFile,"this is a result %f\n", *a); ; break;
                case '/' :;*a = *a / *b;fprintf ( outFile,"this is a result %f\n", *a); ; break;
                case '^' :;for (int c = 1;c<*b;c++)
                {
                    *a= *a *(*a);
                }fprintf (outFile, "this is a result %f\n", *a); break;
               }break;
            case 'v' :  switch(ch)
            {
                case '+':
                    for (int m = 0;m<nubmerOfVec;m++)
                                            {
                                                a[m]= a[m] + b[m];
                                                fprintf (outFile,"%f ",a[m]);
                                            }
                    vectorPlus(a,b,&nubmerOfVec);break;
                case '-':
                    for (int m = 0;m<nubmerOfVec;m++)
                        {
                            a[m]= a[m] - b[m];
                            fprintf (outFile,"%f ",a[m]);
                        }
                    vector_muinus(a,b,&nubmerOfVec);break;
                case '*':
                    for (int m = 0;m<nubmerOfVec;m++)
                                            {
                                                a[m]= a[m] * b[m];
                                                fprintf (outFile,"%f ",a[m]);
                                            }
                    vector_scal(a,b,&nubmerOfVec);break;
            }
          }




           fclose(inFile);
           fclose(outFile);

    return 0;
}
